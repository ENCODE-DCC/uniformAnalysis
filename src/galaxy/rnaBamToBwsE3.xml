<tool id="rnaBamToBwsE3" name="EAP RNA alignment to signal" version="1.0">
    <description> (bam to 4 bigwigs)</description>
    <command interpreter="python">
        rnaBamToBwsE3.py $bamInput $bamEval $uniqPlusBw $uniqMinusBw $allPlusBw $allMinusBw
        $genome $expType $repNo ${name}U${__user_id__}
    </command>
    <version_command>python ../../../../tools/encode/rnaBamToBwsE3.py --version</version_command>
    <stdio>
        <exit_code range="1:" level="fatal" description="Fatal error" />
        <regex match=".*" source="stderr" level="log" />
    </stdio>
    <inputs>
        <param name="genome" type="select" label="Genome Assembly">
            <option value="hg19" selected="true">GRCh37/hg19 Human reference</option>
        </param>
        <param name="expType" type="select" label="Experiment Type">
            <option value="RNAseq-long" selected="true">long RNA-seq</option>
        </param>
        <param name="bamInput" type="data" label="Alignments file (bam)" format="bam" />
        <param name="bamEval"  type="data" label="Alignments Evaluation file (json)"
               format="txt" />
        <param name="repNo" type="integer" value="1" label="Replicate" min="0" help="Numbers only">
        </param>
        <param name="name" type="text" value="" size="40" optional="true" label="Analysis Name" 
               help="Letters and numbers only [optional]">
            <sanitizer invalid_char=""><valid initial="string.letters,string.digits"/></sanitizer>
        </param>
    </inputs>
    <outputs>
        <data name="uniqPlusBw"   format="bigWig" label="${name}Rep${repNo} Unique Plus Signal" />
        <data name="uniqMinusBw"  format="bigWig" label="${name}Rep${repNo} Unique Minus Signal" />
        <data name="allPlusBw"  format="bigWig" label="${name}Rep${repNo} All Plus Signal" />
        <data name="allMinusBw" format="bigWig" label="${name}Rep${repNo} All Minus Signal" />
    </outputs>
    <help>
.. class:: infomark

   Aligns high-throughput-sequencing reads to the reference genome using 'STAR'. 
   An *ENCODE3 Analysis Pipeline* involves multiple steps and dataset replicates, of which this
   is one. Use *EAP workflows* to ensure that all analysis steps are performed in the proper
   sequence.

**Inputs:**
    All *Analysis Pipeline* steps require **Genome Assembly** and **Experiment Type**.  Currently
    only the GRCh37/hg19 reference is supported.  Note that some steps are only appropriate
    for some experiment types.
    
    The **Alignments file** is expected to be the generated output from a previous 
    *EAP fastQ alignment* step.  

    The **Alignments Evaluation** file in json format is expected to be the generated output from
    a previous *EAP bam evaluation* step.  

    The **Replicate** number allows combining multiple replicates into a single analysis.  If the 
    replicate number is not incremented then repeated steps will overwrite previous replicate 
    results. 
    
    The optional **Analysis Name** field will be used to tie multiple steps together into 
    one analysis, ensuring related files are well named and a single log records all processing 
    taken.  If the intention is to run multiple analyses, then providing an analysis name ensures 
    that results from one analyis are over-written by another.  Multiple histories for a single user 
    can share the same named analysis, but two separate users cannot.
    
**Outputs:**
    This step is expected to produce four files:
    
    - **Unique Plus Signal** covering reads that have been uniquely mapped to the plus (+) strand.
    - **Unique Minus Signal** covering reads that have been uniquely mapped to the minus (-) strand.
    - **All Plus Signal** covering all reads that have been mapped to the plus (+) strand.
    - **All Minus Signal** covering all reads that have been mapped to the minus (-) strand.

    The **log** of this single step can be seen under *view details* stdout.

    If the outputs are delivered to a location external to galaxy, the **Analysis log** covering 
    all steps of the analysis will be delivered to the same location.  Otherwise the log may be
    found in the directory pointed to by 'tmpDir' as defined in the settings file.

+--------+------------------------------------------------------------------------------------+
||encPng||All *ENCODE3 Analysis Pipeline* steps provided through Galaxy are run via the same  | 
|        |UCSC scripts and third-party tools as the official *Analysis Pipeline*.  Just as    | 
|        |with the official pipeline, all work is be performed in temporary directories and   |
|        |successful results moved to well-named locations.  If the initial input datasets are| 
|        |from a symlinked Galaxy library, results will be moved to the same directory as the |  
|        |inputs and then symlinked back into Galaxy. If the initial inputs do not have a     | 
|        |recognizable location outside the Galaxy database, then results will be written     |
|        |back into the Galaxy database as well.                                              |
+--------+------------------------------------------------------------------------------------+

.. |encPng| image:: http://genome.ucsc.edu/images/ENCODE_scaleup_logo.png
   :width: 100

    </help>
</tool>
