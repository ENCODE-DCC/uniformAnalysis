#!/cluster/home/mmaddren/python/bin/python

import sys, os, shutil, argparse, urllib2, re
from src.encodeAnalysis import EncodeAnalysis

#EDW->EAP
# - gotReplicate: needs analysisSettings.ra
#EAP->EDW
# - gotFile(s): needs manifest.txt, versions.txt
#       manifest.txt: filename, format, outputtype, experiment, replicate, enrichedin, ucscDb
# 

# 10/15
# I think declareLogFile doesn't work for the non-step log, so I'm back to using the metadata object but I'm only putting it in encodeAnalysis so that galaxy doesn't need
# will likely need to read Ra files from Jim so it makes sense for me to have
# prefer that the caller does the writeVersion() instead of the run function
# analysis.readType() method seems out of place, just let it be a normal variable

# 10/22
# Added helper functions to log for starting/ending tool since it was lots of copypaste
# Added autosomeCount... not yet working
# ask jim about hotspot read length organization, how do I get that.
# ask jim about the document creation, most of the time it's not calculating anything, just sticking in pdf

def main():
    parser = argparse.ArgumentParser(description = 'Uniform analysis pipeline for ENCODE3 data')
    parser.add_argument('-v', '--verbose', action='store_true', default=False, help='Print additional logging information')
    parser.add_argument('-d', '--dryrun', action='store_true', default=False, help='dry run')
    parser.add_argument('settings', help='Settings file')
    parser.add_argument('manifest', help='Manifest file')

    if len(sys.argv) < 2:
        parser.print_usage() 
        return
    args = parser.parse_args(sys.argv[1:])
    
    exp = EncodeAnalysis(args.settings, args.manifest)
    exp.start()
    
    
if __name__ == '__main__':
    main()
    
